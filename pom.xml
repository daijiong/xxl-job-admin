<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--	<parent>-->
    <!--		<groupId>com.xuxueli</groupId>-->
    <!--		<artifactId>xxl-job</artifactId>-->
    <!--		<version>2.3.0</version>-->
    <!--	</parent>-->
    <groupId>com.xuxueli</groupId>
    <version>2.3.0</version>
    <artifactId>xxl-job-admin</artifactId>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <spring-boot-admin.version>2.3.1</spring-boot-admin.version>
        <spring-boot.version>2.3.7.RELEASE</spring-boot.version>
        <spring-cloud-alibaba.version>2.2.5.RELEASE</spring-cloud-alibaba.version>
        <xxl-job-core.version>2.3.0</xxl-job-core.version>
        <mybatis-spring-boot-starter.version>2.2.2</mybatis-spring-boot-starter.version>
        <mysql-connector-java.version>8.0.29</mysql-connector-java.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>
        <!-- starter-web：spring-webmvc + autoconfigure + logback + yaml + tomcat -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- starter-test：junit + spring-test + mockito -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- freemarker-starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>

        <!-- mail-starter -->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-mail</artifactId>-->
<!--        </dependency>-->

        <!-- starter-actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- mybatis-starter：mybatis + mybatis-spring + hikari（default） -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis-spring-boot-starter.version}</version>
        </dependency>
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
        <!-- xxl-job-core -->
        <dependency>
            <groupId>com.xuxueli</groupId>
            <artifactId>xxl-job-core</artifactId>
            <version>${xxl-job-core.version}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>1.5.3</version>
        </dependency>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.16</version>
        </dependency>
        <!-- fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.75</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- docker -->
            <!--			<plugin>-->
            <!--				<groupId>com.spotify</groupId>-->
            <!--				<artifactId>docker-maven-plugin</artifactId>-->
            <!--				<version>0.4.13</version>-->
            <!--				<configuration>-->
            <!--					&lt;!&ndash; made of '[a-z0-9-_.]' &ndash;&gt;-->
            <!--					<imageName>${project.artifactId}:${project.version}</imageName>-->
            <!--					<dockerDirectory>${project.basedir}</dockerDirectory>-->
            <!--					<resources>-->
            <!--						<resource>-->
            <!--							<targetPath>/</targetPath>-->
            <!--							<directory>${project.build.directory}</directory>-->
            <!--							<include>${project.build.finalName}.jar</include>-->
            <!--						</resource>-->
            <!--					</resources>-->
            <!--				</configuration>-->
            <!--			</plugin>-->
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
    <!--私服仓库-->
    <repositories>
        <repository>
            <id>renjia</id>
            <name>renjia Repository</name>
            <url>http://nexus.ukerw.com/repository/maven-public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <!--私服插件仓库-->
    <pluginRepositories>
        <pluginRepository>
            <id>renjia</id>
            <name>renjia Repository plugin</name>
            <url>http://nexus.ukerw.com/repository/maven-public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!--构件上传仓库-->
    <distributionManagement>
        <snapshotRepository>
            <id>renjia-snapshots</id>
            <name>renjia-snapshots</name>
            <url>http://nexus.ukerw.com/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>renjia-releases</id>
            <name>renjia-releases</name>
            <url>http://nexus.ukerw.com/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

    <!-- 环境 -->
    <profiles>
        <!-- 开发 -->
        <profile>
            <id>dev</id>
            <activation>
                <!--默认激活配置-->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--当前环境-->
                <profile.name>dev</profile.name>
                <!--Nacos配置中心地址-->
                <config.server-addr>http://47.100.227.235:8848</config.server-addr>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
                <config.namespace>3f8cc313-c19e-4e89-941a-568cb1be29a1</config.namespace>
                <!--Nacos服务发现地址-->
                <discovery.server-addr>http://47.100.227.235:8848</discovery.server-addr>
            </properties>
        </profile>
        <!-- 戴炯测试环境 -->
        <profile>
            <id>dj</id>
            <properties>
                <!--当前环境-->
                <profile.name>dj</profile.name>
                <!--Nacos配置中心地址-->
                <config.server-addr>http://47.100.227.235:8848</config.server-addr>
                <!--Nacos配置中心命名空间,用于支持多环境.这里必须使用ID，不能使用名称,默认为空-->
                <config.namespace>8f52b2b6-a26b-4c07-88ef-9e30c3bb9498</config.namespace>
                <!--Nacos服务发现地址-->
                <discovery.server-addr>http://47.100.227.235:8848</discovery.server-addr>
            </properties>
        </profile>
    </profiles>
</project>
